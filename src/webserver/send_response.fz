# -----------------------------------------------------------------------
#
#  Tokiwa Software GmbH, Germany
#
#  Source code of Fuzion webserver feature send_response
#
# -----------------------------------------------------------------------

# like its three-argument counterpart, but sends a blank response
#
send_ok_or_reload (cmd String, s Java.dev.flang.Session) Java.dev.flang.webserver_S_Response =>
  send_ok_or_reload cmd s ""


# send an HTTP 200 response with the given data if there is a session,
# and data can be send back over the session, otherwise, return a 500
# response and ask the client to reload
#
send_ok_or_reload (cmd String, s Java.dev.flang.Session, datastr String) Java.dev.flang.webserver_S_Response =>
  returncode := if s.is_null || !s.isContentStreamOk then 500 else 200
  must_message := if s.is_null then "must reload page" else "must reconnect"
  data := if returncode = 500 then must_message.utf8.map (x->x.cast_to_i8) else datastr.utf8.map (x->x.cast_to_i8)
  data2 := data.as_array
  header := "Content-Length: {data2.length}\nContent-Type: text/html\n"
  jflang.webserver_S_Response_static.new returncode header data2


# send an HTTP 200 response along with the given data
#
send_ok (cmd String, datastr String) Java.dev.flang.webserver_S_Response =>
  data := (datastr.utf8.map (x->x.cast_to_i8)).as_array
  header := "Content-Length: {data.length}\nContent-Type: text/html\n"
  jflang.webserver_S_Response_static.new 200 header data


# send an HTTP response provided a Java.dev.flang.Content_S_Identifier
#
send_content (s Java.dev.flang.Session, cmd String, content_identifier Java.dev.flang.Content_S_Identifier) Java.dev.flang.webserver_S_Response =>
  # NYI: logging, mime types
  bytes := content_identifier.getBytes s
  match bytes
    bytes2 fuzion.java.Array =>
      attributes := "Content-Length: {bytes2.length}\n"
      jflang.webserver_S_Response_static.new 200 attributes bytes2
    e error =>
      say e
      jflang.webserver_S_Response_static.new 500 "" (list i8).type.empty
